apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "userchart.fullname" . }}-init
  labels:
    app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
    app.kubernetes.io/instance: {{ .Release.Name | quote }}
    app.kubernetes.io/version: {{ .Chart.AppVersion }}
    helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
  annotations:
    # This is what defines this resource as a hook. Without this line, the
    # job is considered part of the release.
    "helm.sh/hook": post-install
    "helm.sh/hook-weight": "-5"
    "helm.sh/hook-delete-policy": hook-succeeded
spec:
  template:
    metadata:
      name: {{ .Release.Name }}
    spec:
      restartPolicy: Never
      initContainers:
      - name: check-db-is-ready
        image: postgres:11.10
        env:
        - name: DB_HOST
          valueFrom:
            configMapKeyRef:
              name: {{ include "userchart.fullname" . }}-config
              key: db_host
        - name: DB_PORT
          valueFrom:
            configMapKeyRef:
              name: {{ include "userchart.fullname" . }}-config
              key: db_port
        command:
          - sh
          - "-c"
          - |
            until pg_isready -h $DB_HOST -p $DB_PORT;
            do echo "waiting for database"; sleep 2; done;
      containers:
      - name: user-migrate-db
        env:
        - name: DB_HOST
          valueFrom:
            configMapKeyRef:
              name: {{ include "userchart.fullname" . }}-config
              key: db_host
        - name: DB_PORT
          valueFrom:
            configMapKeyRef:
              name: {{ include "userchart.fullname" . }}-config
              key: db_port
        - name: DB_USER
          valueFrom:
            configMapKeyRef:
              name: {{ include "userchart.fullname" . }}-config
              key: db_user
        - name: DB_NAME
          valueFrom:
            configMapKeyRef:
              name: {{ include "userchart.fullname" . }}-config
              key: db_name
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ include "userchart.fullname" . }}-secret
              key: db_password
        image: postgres:11.10
        command:
          - sh
          - "-c"
          - |
            psql postgresql://$DB_USER:$DB_PASSWORD@$DB_HOST:$DB_PORT/$DB_NAME << 'EOF'
              CREATE TABLE IF NOT EXISTS "user"
              (
                  id         uuid,
                  username   VARCHAR NOT NULL,
                  first_name VARCHAR NOT NULL,
                  last_name  VARCHAR NOT NULL,
                  email      VARCHAR NOT NULL,
                  phone      VARCHAR NOT NULL,
                  PRIMARY KEY (id)
              );
            EOF

  backoffLimit: 1